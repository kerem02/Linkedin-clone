{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ggear\\\\PycharmProjects\\\\Linkedin-clone\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport API_BASE from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentSection({\n  postId\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const access = localStorage.getItem(\"access\");\n  useEffect(() => {\n    fetch(`${API_BASE}/api/comments/?post_id=${postId}`, {\n      headers: {\n        Authorization: \"Bearer \" + access\n      }\n    }).then(res => res.json()).then(data => setComments(data));\n  }, [postId]);\n  const handleComment = () => {\n    if (!newComment.trim()) return;\n    fetch(`${API_BASE}/api/comments/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + access\n      },\n      body: JSON.stringify({\n        post_id: postId,\n        content: newComment\n      })\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      setComments(prev => [...prev, {\n        user: \"You\",\n        content: newComment,\n        created_at: new Date().toISOString()\n      }]);\n      setNewComment(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"20px\",\n      marginTop: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: c.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \": \", c.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(c.created_at).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Write a comment...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComment,\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentSection, \"+OVXuOcjEFRN/kXBrT9MF+duWSc=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useEffect","useState","API_BASE","jsxDEV","_jsxDEV","CommentSection","postId","_s","comments","setComments","newComment","setNewComment","access","localStorage","getItem","fetch","headers","Authorization","then","res","json","data","handleComment","trim","method","body","JSON","stringify","post_id","content","alert","message","prev","user","created_at","Date","toISOString","style","marginLeft","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","i","toLocaleString","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ggear/PycharmProjects/Linkedin-clone/frontend/src/components/CommentSection.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport API_BASE from \"../api\";\r\n\r\nfunction CommentSection({ postId }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  const access = localStorage.getItem(\"access\");\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_BASE}/api/comments/?post_id=${postId}`, {\r\n      headers: { Authorization: \"Bearer \" + access }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setComments(data));\r\n  }, [postId]);\r\n\r\n  const handleComment = () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    fetch(`${API_BASE}/api/comments/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + access\r\n      },\r\n      body: JSON.stringify({\r\n        post_id: postId,\r\n        content: newComment\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        alert(data.message);\r\n        setComments(prev => [...prev, {\r\n          user: \"You\",\r\n          content: newComment,\r\n          created_at: new Date().toISOString()\r\n        }]);\r\n        setNewComment(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"20px\", marginTop: \"10px\" }}>\r\n      <strong>Comments:</strong>\r\n      <ul>\r\n        {comments.map((c, i) => (\r\n          <li key={i}>\r\n            <strong>{c.user}</strong>: {c.content}<br />\r\n            <small>{new Date(c.created_at).toLocaleString()}</small>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <textarea\r\n        value={newComment}\r\n        onChange={(e) => setNewComment(e.target.value)}\r\n        placeholder=\"Write a comment...\"\r\n      /><br />\r\n      <button onClick={handleComment}>Comment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}