{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ggear\\\\PycharmProjects\\\\Linkedin_Lite\\\\frontend\\\\src\\\\pages\\\\MessageThread.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageThread() {\n  _s();\n  const {\n    userId\n  } = useParams(); // URL'den receiver ID\n  const [messages, setMessages] = useState([]);\n  const [newMsg, setNewMsg] = useState(\"\");\n  const access = localStorage.getItem(\"access\");\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/messages/?user_id=${userId}`, {\n      headers: {\n        Authorization: \"Bearer \" + access\n      }\n    }).then(res => res.json()).then(data => setMessages(data));\n  }, [userId]);\n  const handleSend = () => {\n    fetch(\"http://localhost:8000/api/messages/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + access\n      },\n      body: JSON.stringify({\n        receiver_id: userId,\n        content: newMsg\n      })\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      setMessages([...messages, {\n        sender: \"You\",\n        receiver: \"Them\",\n        content: newMsg,\n        timestamp: new Date().toISOString()\n      }]);\n      setNewMsg(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"300px\",\n        overflowY: \"scroll\"\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \", msg.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(msg.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type a message...\",\n      value: newMsg,\n      onChange: e => setNewMsg(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageThread, \"Z9AJalXVMqMauTqYZhfLRuKQN8M=\", false, function () {\n  return [useParams];\n});\n_c = MessageThread;\nexport default MessageThread;\nvar _c;\n$RefreshReg$(_c, \"MessageThread\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","MessageThread","_s","userId","messages","setMessages","newMsg","setNewMsg","access","localStorage","getItem","fetch","headers","Authorization","then","res","json","data","handleSend","method","body","JSON","stringify","receiver_id","content","alert","message","sender","receiver","timestamp","Date","toISOString","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","height","overflowY","map","msg","i","toLocaleString","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ggear/PycharmProjects/Linkedin_Lite/frontend/src/pages/MessageThread.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction MessageThread() {\r\n  const { userId } = useParams();  // URL'den receiver ID\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMsg, setNewMsg] = useState(\"\");\r\n\r\n  const access = localStorage.getItem(\"access\");\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/messages/?user_id=${userId}`, {\r\n      headers: { Authorization: \"Bearer \" + access }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setMessages(data));\r\n  }, [userId]);\r\n\r\n  const handleSend = () => {\r\n    fetch(\"http://localhost:8000/api/messages/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + access\r\n      },\r\n      body: JSON.stringify({\r\n        receiver_id: userId,\r\n        content: newMsg\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        alert(data.message);\r\n        setMessages([...messages, {\r\n          sender: \"You\",\r\n          receiver: \"Them\",\r\n          content: newMsg,\r\n          timestamp: new Date().toISOString()\r\n        }]);\r\n        setNewMsg(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Conversation</h2>\r\n      <div style={{ border: \"1px solid #ccc\", padding: \"10px\", height: \"300px\", overflowY: \"scroll\" }}>\r\n        {messages.map((msg, i) => (\r\n          <div key={i}>\r\n            <strong>{msg.sender}:</strong> {msg.content}\r\n            <br /><small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <textarea\r\n        placeholder=\"Type a message...\"\r\n        value={newMsg}\r\n        onChange={(e) => setNewMsg(e.target.value)}\r\n      /><br />\r\n      <button onClick={handleSend}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageThread;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}